/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

int* maxSlidingWindow(int* nums, int numsSize, int k, int* returnSize) {
    int *res = (int*)malloc((numsSize - k + 1) * sizeof(int));
    int *deque = (int*)malloc(numsSize * sizeof(int)); // store indices
    int front = 0, back = 0;
    *returnSize = 0;

    for (int i = 0; i < numsSize; i++) {
        // Remove smaller numbers from the back
        while (back > front && nums[deque[back - 1]] <= nums[i]) {
            back--;
        }
        // Add current index to the deque
        deque[back++] = i;

        // Remove front if it's out of the window
        if (deque[front] <= i - k) {
            front++;
        }

        // Record the max once first k elements are processed
        if (i >= k - 1) {
            res[(*returnSize)++] = nums[deque[front]];
        }
    }

    free(deque);
    return res;
}

